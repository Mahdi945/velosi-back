# Script PowerShell pour g√©n√©rer les donn√©es de test Velosi Transport
# Usage: .\generate-data.ps1 [options]

param(
    [switch]$Clean,
    [switch]$NoKeycloak,
    [switch]$Help
)

Write-Host "üöÄ G√©n√©rateur de donn√©es de test Velosi Transport" -ForegroundColor Green
Write-Host "=================================================" -ForegroundColor Green

if ($Help) {
    Write-Host "Usage: .\generate-data.ps1 [options]"
    Write-Host ""
    Write-Host "Options:"
    Write-Host "  -Clean        Nettoyer les donn√©es existantes avant g√©n√©ration"
    Write-Host "  -NoKeycloak   G√©n√©rer sans synchroniser avec Keycloak"
    Write-Host "  -Help         Afficher cette aide"
    Write-Host ""
    Write-Host "Exemples:"
    Write-Host "  .\generate-data.ps1              # G√©n√©ration normale"
    Write-Host "  .\generate-data.ps1 -Clean       # Nettoyage puis g√©n√©ration"  
    Write-Host "  .\generate-data.ps1 -NoKeycloak  # Sans Keycloak"
    exit 0
}

# V√©rifier que nous sommes dans le bon r√©pertoire
if (-not (Test-Path "scripts\generate-test-data.ts")) {
    Write-Host "‚ùå Erreur: Le script doit √™tre ex√©cut√© depuis le r√©pertoire velosi-back" -ForegroundColor Red
    Write-Host "Usage: cd velosi-back; .\scripts\generate-data.ps1" -ForegroundColor Yellow
    exit 1
}

# V√©rifier que Node.js est install√©
try {
    $nodeVersion = node --version 2>$null
    Write-Host "‚úÖ Node.js d√©tect√©: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n'est pas install√©" -ForegroundColor Red
    Write-Host "T√©l√©chargez Node.js depuis: https://nodejs.org/" -ForegroundColor Yellow
    exit 1
}

# V√©rifier que npm est install√©
try {
    $npmVersion = npm --version 2>$null
    Write-Host "‚úÖ npm d√©tect√©: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå npm n'est pas install√©" -ForegroundColor Red
    exit 1
}

# V√©rifier la configuration
if (-not (Test-Path ".env")) {
    Write-Host "‚ùå Fichier .env manquant" -ForegroundColor Red
    Write-Host "Copiez le fichier .env.example et configurez vos param√®tres" -ForegroundColor Yellow
    exit 1
}

Write-Host "üì¶ V√©rification des d√©pendances..." -ForegroundColor Blue

# V√©rifier si ts-node est install√©
try {
    npx ts-node --version 2>$null | Out-Null
    Write-Host "‚úÖ ts-node disponible" -ForegroundColor Green
} catch {
    Write-Host "üì• Installation de ts-node..." -ForegroundColor Blue
    npm install -g ts-node
}

Write-Host ""
Write-Host "üéØ Configuration:" -ForegroundColor Cyan
Write-Host "   - Base de donn√©es: PostgreSQL" -ForegroundColor White
Write-Host "   - Keycloak: http://localhost:8080" -ForegroundColor White  
Write-Host "   - Realm: ERP_Velosi" -ForegroundColor White
Write-Host ""

# D√©terminer les options de lancement
$scriptArgs = ""

if ($Clean) {
    Write-Host "üßπ Mode: Nettoyage et g√©n√©ration compl√®te" -ForegroundColor Yellow
    $scriptArgs += " --clean"
}

if ($NoKeycloak) {
    Write-Host "üîí Mode: Sans synchronisation Keycloak" -ForegroundColor Yellow
    $scriptArgs += " --no-keycloak"
}

if (-not $Clean -and -not $NoKeycloak) {
    Write-Host "üìä Mode: G√©n√©ration standard" -ForegroundColor Cyan
}

# Ex√©cuter le script
Write-Host "‚ö° D√©marrage de la g√©n√©ration..." -ForegroundColor Green
try {
    if ($scriptArgs) {
        Invoke-Expression "npx ts-node scripts/generate-test-data.ts$scriptArgs"
    } else {
        npx ts-node scripts/generate-test-data.ts
    }
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "‚ú® Script termin√© avec succ√®s !" -ForegroundColor Green
        Write-Host "üîó Acc√©dez √† votre application sur http://localhost:4200" -ForegroundColor Cyan
        Write-Host ""
        Write-Host "üîê Mots de passe par d√©faut:" -ForegroundColor Yellow
        Write-Host "   - Personnel: VelosiPersonnel2024!" -ForegroundColor White
        Write-Host "   - Clients: VelosiClient2024!" -ForegroundColor White
    } else {
        Write-Host "‚ùå Le script s'est termin√© avec des erreurs" -ForegroundColor Red
    }
} catch {
    Write-Host "üí• Erreur lors de l'ex√©cution: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}